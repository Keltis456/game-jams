//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TileHealthLink tileHealthLink { get { return (TileHealthLink)GetComponent(GameComponentsLookup.TileHealthLink); } }
    public bool hasTileHealthLink { get { return HasComponent(GameComponentsLookup.TileHealthLink); } }

    public void AddTileHealthLink(int newId) {
        var index = GameComponentsLookup.TileHealthLink;
        var component = (TileHealthLink)CreateComponent(index, typeof(TileHealthLink));
        component.id = newId;
        AddComponent(index, component);
    }

    public void ReplaceTileHealthLink(int newId) {
        var index = GameComponentsLookup.TileHealthLink;
        var component = (TileHealthLink)CreateComponent(index, typeof(TileHealthLink));
        component.id = newId;
        ReplaceComponent(index, component);
    }

    public void RemoveTileHealthLink() {
        RemoveComponent(GameComponentsLookup.TileHealthLink);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTileHealthLink;

    public static Entitas.IMatcher<GameEntity> TileHealthLink {
        get {
            if (_matcherTileHealthLink == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TileHealthLink);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTileHealthLink = matcher;
            }

            return _matcherTileHealthLink;
        }
    }
}
