//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TileName tileName { get { return (TileName)GetComponent(GameComponentsLookup.TileName); } }
    public bool hasTileName { get { return HasComponent(GameComponentsLookup.TileName); } }

    public void AddTileName(string newValue) {
        var index = GameComponentsLookup.TileName;
        var component = (TileName)CreateComponent(index, typeof(TileName));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTileName(string newValue) {
        var index = GameComponentsLookup.TileName;
        var component = (TileName)CreateComponent(index, typeof(TileName));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTileName() {
        RemoveComponent(GameComponentsLookup.TileName);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTileName;

    public static Entitas.IMatcher<GameEntity> TileName {
        get {
            if (_matcherTileName == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TileName);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTileName = matcher;
            }

            return _matcherTileName;
        }
    }
}
