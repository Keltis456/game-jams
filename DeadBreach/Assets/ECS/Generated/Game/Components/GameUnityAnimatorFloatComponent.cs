//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public UnityAnimatorFloat unityAnimatorFloat { get { return (UnityAnimatorFloat)GetComponent(GameComponentsLookup.UnityAnimatorFloat); } }
    public bool hasUnityAnimatorFloat { get { return HasComponent(GameComponentsLookup.UnityAnimatorFloat); } }

    public void AddUnityAnimatorFloat(string newName, float newValue, UnityEngine.Animator newAnimator) {
        var index = GameComponentsLookup.UnityAnimatorFloat;
        var component = (UnityAnimatorFloat)CreateComponent(index, typeof(UnityAnimatorFloat));
        component.name = newName;
        component.value = newValue;
        component.animator = newAnimator;
        AddComponent(index, component);
    }

    public void ReplaceUnityAnimatorFloat(string newName, float newValue, UnityEngine.Animator newAnimator) {
        var index = GameComponentsLookup.UnityAnimatorFloat;
        var component = (UnityAnimatorFloat)CreateComponent(index, typeof(UnityAnimatorFloat));
        component.name = newName;
        component.value = newValue;
        component.animator = newAnimator;
        ReplaceComponent(index, component);
    }

    public void RemoveUnityAnimatorFloat() {
        RemoveComponent(GameComponentsLookup.UnityAnimatorFloat);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherUnityAnimatorFloat;

    public static Entitas.IMatcher<GameEntity> UnityAnimatorFloat {
        get {
            if (_matcherUnityAnimatorFloat == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.UnityAnimatorFloat);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherUnityAnimatorFloat = matcher;
            }

            return _matcherUnityAnimatorFloat;
        }
    }
}
