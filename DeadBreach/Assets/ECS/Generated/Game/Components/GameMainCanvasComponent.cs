//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity mainCanvasEntity { get { return GetGroup(GameMatcher.MainCanvas).GetSingleEntity(); } }
    public MainCanvas mainCanvas { get { return mainCanvasEntity.mainCanvas; } }
    public bool hasMainCanvas { get { return mainCanvasEntity != null; } }

    public GameEntity SetMainCanvas(UnityEngine.Canvas newValue) {
        if (hasMainCanvas) {
            throw new Entitas.EntitasException("Could not set MainCanvas!\n" + this + " already has an entity with MainCanvas!",
                "You should check if the context already has a mainCanvasEntity before setting it or use context.ReplaceMainCanvas().");
        }
        var entity = CreateEntity();
        entity.AddMainCanvas(newValue);
        return entity;
    }

    public void ReplaceMainCanvas(UnityEngine.Canvas newValue) {
        var entity = mainCanvasEntity;
        if (entity == null) {
            entity = SetMainCanvas(newValue);
        } else {
            entity.ReplaceMainCanvas(newValue);
        }
    }

    public void RemoveMainCanvas() {
        mainCanvasEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MainCanvas mainCanvas { get { return (MainCanvas)GetComponent(GameComponentsLookup.MainCanvas); } }
    public bool hasMainCanvas { get { return HasComponent(GameComponentsLookup.MainCanvas); } }

    public void AddMainCanvas(UnityEngine.Canvas newValue) {
        var index = GameComponentsLookup.MainCanvas;
        var component = (MainCanvas)CreateComponent(index, typeof(MainCanvas));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMainCanvas(UnityEngine.Canvas newValue) {
        var index = GameComponentsLookup.MainCanvas;
        var component = (MainCanvas)CreateComponent(index, typeof(MainCanvas));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMainCanvas() {
        RemoveComponent(GameComponentsLookup.MainCanvas);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMainCanvas;

    public static Entitas.IMatcher<GameEntity> MainCanvas {
        get {
            if (_matcherMainCanvas == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MainCanvas);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMainCanvas = matcher;
            }

            return _matcherMainCanvas;
        }
    }
}
