//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RequireSkillOnSlot requireSkillOnSlot { get { return (RequireSkillOnSlot)GetComponent(GameComponentsLookup.RequireSkillOnSlot); } }
    public bool hasRequireSkillOnSlot { get { return HasComponent(GameComponentsLookup.RequireSkillOnSlot); } }

    public void AddRequireSkillOnSlot(DeadBreach.ECS.Skills.ISkill newValue, int newIndex) {
        var index = GameComponentsLookup.RequireSkillOnSlot;
        var component = (RequireSkillOnSlot)CreateComponent(index, typeof(RequireSkillOnSlot));
        component.value = newValue;
        component.index = newIndex;
        AddComponent(index, component);
    }

    public void ReplaceRequireSkillOnSlot(DeadBreach.ECS.Skills.ISkill newValue, int newIndex) {
        var index = GameComponentsLookup.RequireSkillOnSlot;
        var component = (RequireSkillOnSlot)CreateComponent(index, typeof(RequireSkillOnSlot));
        component.value = newValue;
        component.index = newIndex;
        ReplaceComponent(index, component);
    }

    public void RemoveRequireSkillOnSlot() {
        RemoveComponent(GameComponentsLookup.RequireSkillOnSlot);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRequireSkillOnSlot;

    public static Entitas.IMatcher<GameEntity> RequireSkillOnSlot {
        get {
            if (_matcherRequireSkillOnSlot == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RequireSkillOnSlot);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRequireSkillOnSlot = matcher;
            }

            return _matcherRequireSkillOnSlot;
        }
    }
}
